# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Create Repository Workflow

on:
  workflow_dispatch: # Allows manual triggering of the workflow
    inputs:
      repository_name:
        description: 'Name of the repository'
        required: true
        default: 'my-repo'
      owner_team:
        description: 'Owner team name'
        required: true
        default: 'default-team'
      autolink_key_prefix:
        description: 'Autolink key prefix'
        required: true
        default: 'ABC'
      default_branch:
        description: 'Default branch name'
        required: true
        default: 'main'
      run_id:
        description: 'Run identifier for logging'
        required: true
        default: '12345'

jobs:
  create_repo:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Run Python script to create repo
        id: run_script
        env:
          GITHUB_TOKEN: ${{ secrets.CREATE_REPO_GITHUB_TOKEN }}
          REPOSITORY_NAME: ${{ github.event.inputs.repository_name }}
          OWNER_TEAM: ${{ github.event.inputs.owner_team }}
          AUTOLINK_KEY_PREFIX: ${{ github.event.inputs.autolink_key_prefix }}
          DEFAULT_BRANCH: ${{ github.event.inputs.default_branch }}
        run: |
          echo "SCRIPT_OUTPUT=$(python3 scripts/port/create-repo/main.py | tr -d '\n' | tr -d '\r')" >> $GITHUB_OUTPUT
          echo "Captured output: $SCRIPT_OUTPUT"
          echo "Environment: $GITHUB_ENV"

      - name: Send log back to Port
        uses: port-labs/port-github-action@v1
        env:
          SCRIPT_OUTPUT: ${{ env.SCRIPT_OUTPUT }}
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          runId: ${{ inputs.run_id }}
          logMessage: |
            "LOG: ${{ steps.run_script.outputs.SCRIPT_OUTPUT }}"
